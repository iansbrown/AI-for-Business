# -*- coding: utf-8 -*-
"""DecisionTreeRegressor_plot_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eD2zlyhow0k9kyik3C6y_uNvIX5uLcL2
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeRegressor, plot_tree

# Generate some sample data
X = np.linspace(-5, 5, num=100).reshape(-1, 1)
y = np.sin(X) + np.random.normal(0, 0.1, size=X.shape)

# Train the model
regressor = DecisionTreeRegressor(max_depth=3)
regressor.fit(X, y)

# Plot the decision tree
plt.figure(figsize=(10, 7))
plot_tree(regressor, filled=True)
plt.show()

"""In this example, we first generated some sample data and trained a DecisionTreeRegressor model on it with a maximum depth of 3. We then plotted the decision tree learned during training.

The fit method of the DecisionTreeRegressor class fits a decision tree to the input data X and target values y. The plot_tree function in sklearn.tree module is used to create a tree plot of the learned decision tree. We set the filled parameter to True to color the nodes based on the majority class in the region they represent. The resulting plot shows the decision tree with each node representing a decision rule based on a feature and a threshold value, and each leaf node representing a constant value fitted to the data in that region.
"""