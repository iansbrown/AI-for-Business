# -*- coding: utf-8 -*-
"""MultipleLinearRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ms6a2pj6Dir0eL1EblgIV_DFplAUQk2s
"""

import numpy as np

class MultipleLinearRegression:
    def __init__(self, lr=0.01, num_iters=1000):
        self.lr = lr
        self.num_iters = num_iters
        self.weights = None
        self.bias = None
        
    def fit(self, X, y):
        n_samples, n_features = X.shape
        self.weights = np.zeros(n_features)
        self.bias = 0
        
        for _ in range(self.num_iters):
            y_pred = np.dot(X, self.weights) + self.bias
            dw = (1 / n_samples) * np.dot(X.T, (y_pred - y))
            db = (1 / n_samples) * np.sum(y_pred - y)
            self.weights -= self.lr * dw
            self.bias -= self.lr * db
            
    def predict(self, X):
        y_pred = np.dot(X, self.weights) + self.bias
        return y_pred

X = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
y = np.array([4, 8, 12])

regressor = MultipleLinearRegression(lr=0.01, num_iters=1000)
regressor.fit(X, y)

test_X = np.array([[10, 11, 12]])
test_y_pred = regressor.predict(test_X)

print(test_y_pred) # output: [16.00022713]