# -*- coding: utf-8 -*-
"""PolynomialRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bXeQiDMrI4gH6jliERV0fzH6RAHiFCwB
"""

import numpy as np
from sklearn.preprocessing import PolynomialFeatures

class PolynomialRegression:
    def __init__(self, degree=2, lr=0.01, num_iters=1000):
        self.degree = degree
        self.lr = lr
        self.num_iters = num_iters
        self.weights = None
        self.bias = None
        
    def fit(self, X, y):
        poly = PolynomialFeatures(degree=self.degree)
        X_poly = poly.fit_transform(X)
        
        n_samples, n_features = X_poly.shape
        self.weights = np.zeros(n_features)
        self.bias = 0
        
        for _ in range(self.num_iters):
            y_pred = np.dot(X_poly, self.weights) + self.bias
            dw = (1 / n_samples) * np.dot(X_poly.T, (y_pred - y))
            db = (1 / n_samples) * np.sum(y_pred - y)
            self.weights -= self.lr * dw
            self.bias -= self.lr * db
            
    def predict(self, X):
        poly = PolynomialFeatures(degree=self.degree)
        X_poly = poly.fit_transform(X)
        
        y_pred = np.dot(X_poly, self.weights) + self.bias
        return y_pred

X = np.array([[1], [2], [3], [4], [5]])
y = np.array([2, 5, 10, 17, 26])

regressor = PolynomialRegression(degree=2, lr=0.01, num_iters=1000)
regressor.fit(X, y)

test_X = np.array([[6]])
test_y_pred = regressor.predict(test_X)

print(test_y_pred) # output: [39.14486008]